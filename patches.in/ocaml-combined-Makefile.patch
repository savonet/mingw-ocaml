OCaml sources uses separate Makefile and Makefile.nt in each directory,
which is a pain when cross-compiling.  Instead of that, it's better to
combine all objects into one Makefile, and make sure the source is
defended by #ifdef/#ifndef WIN32 ... #endif, around the whole files as
necessary.

Index: mingw-ocaml/build/ocaml/asmrun/Makefile
===================================================================
--- mingw-ocaml.orig/build/ocaml/asmrun/Makefile	2014-01-26 18:44:09.686929751 -0600
+++ mingw-ocaml/build/ocaml/asmrun/Makefile	2014-01-26 18:44:09.642932806 -0600
@@ -24,7 +24,7 @@
   misc.o freelist.o major_gc.o minor_gc.o memory.o alloc.o compare.o ints.o \
   floats.o str.o array.o io.o extern.o intern.o hash.o sys.o parsing.o \
   gc_ctrl.o terminfo.o md5.o obj.o lexing.o printexc.o callback.o weak.o \
-  compact.o finalise.o custom.o unix.o backtrace.o natdynlink.o debugger.o \
+  compact.o finalise.o custom.o unix.o win32.o backtrace.o natdynlink.o debugger.o \
   meta.o dynlink.o
 
 ASMOBJS=$(ARCH).o
@@ -154,6 +154,8 @@
 	ln -s ../byterun/globroots.c globroots.c
 unix.c: ../byterun/unix.c
 	ln -s ../byterun/unix.c unix.c
+win32.c: ../byterun/win32.c
+	ln -s ../byterun/win32.c win32.c
 dynlink.c: ../byterun/dynlink.c
 	ln -s ../byterun/dynlink.c dynlink.c
 signals.c: ../byterun/signals.c
@@ -164,7 +166,7 @@
 LINKEDFILES=misc.c freelist.c major_gc.c minor_gc.c memory.c alloc.c array.c \
   compare.c ints.c floats.c str.c io.c extern.c intern.c hash.c sys.c \
   parsing.c gc_ctrl.c terminfo.c md5.c obj.c lexing.c printexc.c callback.c \
-  weak.c compact.c finalise.c meta.c custom.c main.c globroots.c unix.c \
+  weak.c compact.c finalise.c meta.c custom.c main.c globroots.c unix.c win32.c \
   dynlink.c signals.c debugger.c
 
 clean::
Index: mingw-ocaml/build/ocaml/byterun/Makefile.common
===================================================================
--- mingw-ocaml.orig/build/ocaml/byterun/Makefile.common	2014-01-26 18:44:09.686929751 -0600
+++ mingw-ocaml/build/ocaml/byterun/Makefile.common	2014-01-26 18:44:09.646932528 -0600
@@ -22,7 +22,7 @@
   compare.o ints.o floats.o str.o array.o io.o extern.o intern.o \
   hash.o sys.o meta.o parsing.o gc_ctrl.o terminfo.o md5.o obj.o \
   lexing.o callback.o debugger.o weak.o compact.o finalise.o custom.o \
-  dynlink.o
+  dynlink.o win32.o
 
 PRIMS=\
   alloc.c array.c compare.c extern.c floats.c gc_ctrl.c hash.c \
Index: mingw-ocaml/build/ocaml/byterun/unix.c
===================================================================
--- mingw-ocaml.orig/build/ocaml/byterun/unix.c	2014-01-26 18:44:09.686929751 -0600
+++ mingw-ocaml/build/ocaml/byterun/unix.c	2014-01-26 18:44:09.646932528 -0600
@@ -13,6 +13,8 @@
 
 /* Unix-specific stuff */
 
+#ifndef WIN32
+
 #define _GNU_SOURCE
            /* Helps finding RTLD_DEFAULT in glibc */
 
@@ -322,3 +324,5 @@
 }
 
 #endif
+
+#endif /* !WIN32 */
Index: mingw-ocaml/build/ocaml/byterun/win32.c
===================================================================
--- mingw-ocaml.orig/build/ocaml/byterun/win32.c	2014-01-26 18:44:09.686929751 -0600
+++ mingw-ocaml/build/ocaml/byterun/win32.c	2014-01-26 18:45:21.121966943 -0600
@@ -11,6 +11,8 @@
 /*                                                                     */
 /***********************************************************************/
 
+#ifdef WIN32
+
 /* Win32-specific stuff */
 
 #include <windows.h>
@@ -502,3 +504,5 @@
 }
 
 #endif
+
+#endif /* WIN32 */
Index: mingw-ocaml/build/ocaml/otherlibs/systhreads/Makefile
===================================================================
--- mingw-ocaml.orig/build/ocaml/otherlibs/systhreads/Makefile	2014-01-26 18:44:09.686929751 -0600
+++ mingw-ocaml/build/ocaml/otherlibs/systhreads/Makefile	2014-01-26 18:44:09.654931973 -0600
@@ -18,8 +18,8 @@
 MKLIB=../../boot/ocamlrun ../../tools/ocamlmklib
 COMPFLAGS=-w +33..39 -warn-error A -g
 
-BYTECODE_C_OBJS=st_stubs_b.o
-NATIVECODE_C_OBJS=st_stubs_n.o
+BYTECODE_C_OBJS=st_stubs_b.o win32_b.o
+NATIVECODE_C_OBJS=st_stubs_n.o win32_n.o
 
 THREAD_OBJS= thread.cmo mutex.cmo condition.cmo event.cmo threadUnix.cmo
 
@@ -35,6 +35,10 @@
 	   -c st_stubs.c
 	mv st_stubs.o st_stubs_b.o
 
+win32_b.$(O): st_stubs.c st_win32.h
+	$(BYTECC) -I ../../byterun $(BYTECCCOMPOPTS) $(CFLAGS) -c st_stubs.c
+	mv st_stubs.$(O) win32_b.$(O)
+
 # Dynamic linking with -lpthread is risky on many platforms, so
 # do not create a shared object for libthreadsnat.
 libthreadsnat.a: $(NATIVECODE_C_OBJS)
@@ -46,9 +50,13 @@
 	            -DSYS_$(SYSTEM) -c st_stubs.c
 	mv st_stubs.o st_stubs_n.o
 
+win32_n.$(O): st_stubs.c st_win32.h
+	$(NATIVECC) -DNATIVE_CODE -O -I../../asmrun -I../../byterun $(NATIVECCCOMPOPTS) -c st_stubs.c
+	mv st_stubs.$(O) win32_n.$(O)
+
 threads.cma: $(THREAD_OBJS)
 	$(MKLIB) -ocamlc '$(CAMLC)' -o threads $(THREAD_OBJS) \
-	  -cclib -lunix $(PTHREAD_LINK)
+	  -cclib -lunix $(PTHREAD_LINK) -lcamlrun
 
 # See remark above: force static linking of libthreadsnat.a
 threads.cmxa: $(THREAD_OBJS:.cmo=.cmx)
